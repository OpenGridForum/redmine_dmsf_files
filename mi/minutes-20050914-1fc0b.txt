OGSA Teleconference - 14 September 2005
=======================================

* Participants

  Ellen Stokes (IBM)
  Mark Morgan (UVa)
  Dejan Milojicic (HP)
  Stuart Schaefer (Softricity)
  Soonwook Hwang (NAREGI)
  Andrew Grimshaw (UVa)
  Jay Unger (IBM)
  Allen Luniewski (IBM)
  Ravi Subramaniam (Intel)
  Tom Maguire (EMC)
  Jem Treadwell (HP)
  Hiro Kishimoto (Fujitsu)

  Minutes: Hiro Kishimoto

* Sep 12 minutes approved with no changes

* OGSA F2F meeting back-to-back with GGF15 schedule

  OGSA-WG will have F2F meeting on Thursday and Friday.
  CDDLM-WG have a couple of GGF15 sessions on Thursday.
  Dejan will talk to Joel to move them to another day.
  Ellen asks if we adjurn early on Friday to fly out Boston.
  Agree to adjurn around 3pm on Friday.
  The following sessions are proposed to have at the F2F.
  - EMS (CDDLM, ACS, WS-Agreement)
  - OGSA-naming
  - information/data model
  - OGSA-BES
  - OGSA-data

  Allen: Talk to DaveB if OGSA-data WG will have a session.
  Hiro: Send out early draft schedule to the list in order
        to solicit additional requests and comments.

* EMS discussion (CDDLM in EMS architecture)

  Hiro sent out related materials pointers.
  Stuart started discussion thread on OGSA EMS sequence
  diagram (#3).

  Andrew: CSG generates list of CS. CSG needs information
       from IS.
  Jay: In order to run a peace of software (e.g. blast), job should
       have description of blast, which capability/date it needs.
  Andrew: Is it by JSDL? Does ACS provide such description? Does
       CSG understand such description?
  Ravi: Keep CGS simple.
  Jay: I see hierarchical problem here. Blast needs some capability,
       And that capability needs another ones…
  Ravi: CGS is not an asset management. CGS only handles hardware 
       Specs (like CPU type, memory size, etc)

  Andrew: First of all, we should agree objects of CSG, CDDLM and ACS...
       JSDL is more user focus and does not describe how to deploy.

  Stuart: CDDLM-WG did this scenario walk through almost 2 years
       before. And then ACS came, and ACS is a contents archive,
       not CIM database. You should get a template for deployment
       first.  

  Jay: For example, user wants to run blast with 500 MIPS CPU, with
       this middleware and that data. Does ACS support such dependency
       tree?  

  Stuart: ACS is not such active service. You may get template from
       ACS and grand the template with allocated server name, etc. 

  Ravi: Anyway we need generic archiver (bit bucket).
  Stuart: SDD (OASIS Solution Deployment Descriptor TC) is overlaping
       with ACS and CDDLM. 

  Hiro: ACS is archiver for application package. It defines archiver
       interface specification and format specification. ACS format
       specification has  mondatory/option/extention elements. 

  Jay: there should be offline process to define template for blast and
      I don't want to tree-search at real time. Also the system should
      have cache capability: already deploy necessary
      middleware/library in containers. 
  Dejan: CDDLM spec lacks temporal aspect of components, CDDLM-CDL can
      only describe dependency of components. 

  Jay: If I want to run BLAST on Linux/Intel but the system does not
      have one, does some service give us Linux/Intel by provisioning? 

  If ACS is rather bit bucket, does component model work for us.
  Stuart: NO, CDL language can do all for you.

  Which service handles stuffed JSDL and CDL?
  Not CDDLM service. CDDLM service only covers a part of deployment.
  Whole chain should be EMS. CDDLM is a gear box containing deployment
  and configuration. 
  Ravi: Is JSDL and CDL overlapped? Does CDDLM service get JSDL
      document and get grounded one back? 

  Jay: There are a lot of cases, you can choose a container, sometime
      container already ready to run blast, sometime it need to deploy
      BLAST application binary, sometime blast + middle ware, sometime
      blast + middle + os... 

      We should have clean separation between, scheduling, deploy,
      workload management. 

  Jay: provisioning and scheduling is related but different thing.
      Provisioning is very constrained by possible translation.

  Dejan: CDDLM service is not provisioner, it does just configuration
      change. 

  Jay: It seems to me that CDDLM service has nugget of interesting
      functionalities. CDDLM service is gear box which passes back EPR
      ready to run BLAST. EMS team likes the granularity of its
      component model.  

  Stuart: CDDLM service is not engine, it does just good thing.
  Ravi: CDDLM is handy man, not control tower.

  Hiro: At this moment, CDDLM-WG and ACS-WG scope only applications,
      no more than that (e.g. middleware, OSes). 

  Stuart: CDDLM deploy container + code, thus you can use CDDLM engine
      to deploy OS but it is not CDDLM-WG's goal. 

  Ravi: I guess EPS makes plan, hand it over to CDDLM to get things done.

  Jay: there is potentially big overlap between EMS and CDDLM we need
      more face time to discuss. 

  Dejan: I have a proposal to show working demonstration using glance
      session. We did once last week. Also, we will have 4 demos at
      GGF15. There are at least three demo opportunities; 
      1: next Wednesday
      2: following Friday
      3: GGF15

* Next step:

  Hiro: Get editable scenario file from Mike and pass it to Stuart. 
  Stuart: Break down single "provisioner" box into multiple services
      which CDDLM-WG and ACS-WG are working on. Modifications should
      be color coded. 

  Dejan: Talk to Ayla when she can make her demo for OGSA team.

  We will have another joint CDDLM-WG call on next Wednesday
  (Sept. 21, 5-7pm CDT). 


