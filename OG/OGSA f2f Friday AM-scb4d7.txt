OGSA Nov f2f Friday AM
======================

JSDL/XQuery/Information
=======================

 - JSDL 2.0


BPEL from IBM / Microsoft
  - political problems - no everyone using it.


<AG>Language and dependency based workflow systems - can translate from one to other
 - Not really relevant
  - BPEL is an XML language not a programming language

<AG>What are the dependencies
 - really it’s a programming language in XML

<P>Tooling is available for BPEL

<JU>No problem with BPEL
 - Job simple dependencies can be done in a classads type manner
  - capabilities and requirements could be used to do this
  - need to capture the real underlying requirements/dependencies between jobs
 - Consider the ClassAds DAGMAN approach
<AG> Are you wanting all the ideas from DAGMAN?
 -<JU> Dagman still has an unexplained graph
 -<AG> Control flow with implied data flow

Links can only have one source and one target
 -<AG> Weird and not good
  - Multiple outputs are possible from items
  - Links are for control
  - Can set properties on links

<AG> Can we type and size of flow?
 - can't do that
 - Can tag in variables but this has no explicit meaning

Data is two types
 - Control data
 - Actual data for Application

<ASM>Make data flow specific as components in workflow
 - Then can add QoS on top

BPEL is high level language

<AG> -> <JU>Is this good idea?
 - For some cases yes
  - can have other ways
 - <ASM> Does this cause creep?
  - <TM> Can't prevent this should embrace it
 -<JU> Specific dependency should be modelled as resource dependency
  - Might be better if application works this way

<AG>Keep focused at underlying parts
 - Not high level constructs

<JU>Some want just links in a graph - that's fine
 - OGSA should provide modelling constructs

<HK>Can we use BPEL?
 - <TM> It’s a hub and spoke approach
  - Can't really do distributed Graphs

<ASM> Can we propose that we have multiple approaches and how to do each of these?
 - <AG> Set up a design team to look into this?
  - Do we have consensus for this (design team)?
   -<DS> Should be short lived design team
   - <JU> Don't do the work just figure out what can be done
   - <ASM> Sort out what is out there and what could potentially be done
   - <AG> to lead
   - Initial deadline - preliminary report for January meeting

<TM>Choreography vz Orchestration - you refer to BPEL as choreography but its orchestration
 - Difference is Orchestration is one users view while choreography is more a systems view
 - <A> Spec uses the word choreography

<AS> Job Submission document - is that a JSDL?
 - Yes and perhaps the BES extra documents

<HK> What is different between 1.2 and 2.0 of BPEL?
  - Change way to do add in new types of activities as was broken in 1.2
  - If then else
  - Extended for each
  - variable initialisation
  - XSLT for variables
  - Expressions support improved
  - link variables to doc/literals
  - better support for long running jobs
   - In general better and more complete

Most have implementations of 1,1 some 1,2 and one or two implementations of 2.0 coming

Use of BPEL + JSDL
 - OMII - BPEL (Sedna project)
 - Intel has an offering


XQuery
======

<AS> Any reason for security elements being one or more
 - No slides are not perfect

<JU>[Sample BES2 document] Document seems to have four endpoints
 - Intention is that each host is a front-end to a cluster

<ASM> Do you match between VO and host?
 - Not a this stage this was a proof of theory - should do it later

<TM> Can we render these capabilities and requirements into XML?
 - How do we automatically do this?
 - <ES> We need to gather this info from hosts or hosts to find schedulers/job managers to pass this info in
  - <JU> How far does the XQuery mash up go?
   - Need mechanism for pushing info into advertising space
    - Need to investigate how to generate XQuery
    - <MD> Need just to define signature for functions

Can use XQuery for mapping from red to Blue

<TM> Information services provide capabilities up
 - IS there a collection point for these advertisements? Does this them project XQuery representations out? Or leave this to developer?
 - <ES> Shouldn't leave this to developer
 - <JU> Need to support both
 - <TM> Industry needs to worry about how to get information from system
 - Need to look at this as more of an end to end problem

<DS> WS-Policy - can do a lot of what we want. Need better examples
<Action Item> Look into policy and relationships to what has been defined so far < -> ES>
 - <TM> Look at how to avoid overlap with WS-Policy group

<TM> Is XQuery too heavy-weight for this?
 - <JU> Perhaps not

Is this something for SCRUM? Is it still active?
 - Yes it's active and perhaps appropriate

<HK>Need a design team for how to collect data

Need to relate this to other work in the community

<JU> It may not be able to do this in a transparent manner to JSDL 1.0
  <ES> So would just ignore JSDL extensions
   - Can just ignore

<FB> How do you keep new resource section and old one in sync?
  - shouldn't use both together

<AS> But you have to handle all extensions or throw document
 - So two competing specs wouldn't be implemented together
 - Could replace resources with this in JSDL 2.0

Showing code not possible - will happen at later telecon

