meeting minutes
---------------

GRAAP-WG meeting 3 (Technical Session 2)

focus of session: Managing lifecycles for agreements (led by Kate Keahey)
----------------

We defined lifecycle as everything that occurs between creation of the
agreement (service) via the factory to termination of the service,
currently due to the OGSI termination time.  It was pointed out that
termination does not necessarily release the parties from terms of the
agreement.  The logical lifetime could be longer than the "physical
lifetime" of the agreement service.

Different lifetime states were defined:
- Considered
- Observed
- Committed might be a new one based on the previous session's discussion

Also satisfaction states for an observed agreement:
- Satisfied
- Violated
- Completed
- Partial satisfaction

These states were called out in a state diagram.  That led to the
question of whether a violated agreement can get back to being
satisfied.  Consensus of discussion was yes, but that we must capture
the fact that a violation has occurred because it may be needed later.

How should termination time be used?
One use is to limit the amount of time to reach an agreement during
negotiation, but termination time itself could be a negotiable
attribute.  This leads to the idea of termination time as an attribute
on individual terms or at least to term groups that make up the
agreement though there's concern this starts to become quite complex
to manage properly.

A question was raised about whether there's any assertion that terms
are in a consistent/non-contradictory state.  The current answer is no.

As related work, there was a question about how negotiation is handled
in the legal field.  There are likely defined processes and
terminology there.  But, we are not trying to fully mimic or replace a
legal process here.  The group does not intend to be able to anything
as rigorous as would be required for legal contracts.

We also discussed how agreement life time relates to the agreement
target's lifetime.  Must the agreement live longer?  This is what
we've discussed previously in the context of an audit system that
holds things after finalization.  What happens at finalization could
be a subject of negotiation, and we may want to provide some default
term definitions for this, but the group does not presently want to
define a particular persistent audit service.  This could look at the
RUS-WG for related work here, but in many cases this is likely to be
domain specific.

Also, what about when the negotiation takes longer than the target's
lifetime.  You must renew the lifetime of the target much as you would
with Kerberos tickets.

We also discussed what can occur prior to an agreement.  That is, what
does advertising do.  The notion here was around templates, and that
has been discussed in some other groups such as JSDL or DAIS.  This
could be an easier approach than the current supportedAgreements
definition.

We also re-asserted the need for a commitment handshake and that
without it, the spec. is broken.



Asit Dan then presented work on templates
-----------------------------------------

The idea is similar to car buying.  You're provided with a list of
options or option packages to pick and choose from.  These option
packages are encapsulated in a template.

Templates need not enumerate all possible agreements, that's just too
much detail and complexity.  We want to provide hints with this
mechanism, and there's consensus that we can advertise them via SDEs
on the factory without adding anything to the port-types.

Also pointed out that templates are not the only way for a client to
get started with a provider.  Perhaps there's an old agreement around
they uses as a starting point for a new agreement creation.

We also discussed the idea of storing templates in a centralized
repository for larger scale and brokering.  Issues of how the
repository is managed and updated come up with this approach.  Also,
querying this repository is going to be difficult.

A question was raised about the use of WS-Policy since it does not
exist in any standards body.  That's ok, though, because it is
publicly available, and we can refer to any other public document just
as well.
