Grid Scheduling Architecture Research Group (GSA-RG) session
Wednesday, September 13, 2006. 4:00pm - 5:30pm
----------------------------------------------

- IPR presented
- Signing sheet circulated
- Agenda [See slides on GridForge]

- GRMS presentation [Ariel; Slides on the GridForge]
 + GRMS consumes workflows which are decomposed into jobs which are then scheduled. 
   Constraints are being taken into consideration.
 + Soft and hard constraints on task execution can be defined.
 + Resource schema is available (but not exposed externally).
 + JSDL as input is possible.
   Q: What is lost using this? - A: Work flow definition. User constraints are also lost.
 + Q: Which info is needed about resources? - A: Some kind of general resource offer.
 + Resume: Input from requester: JSDL + extensions (tbd.). 
   Input from provider: Capabilities. 
   What is needed for a scheduling decision -> Provide this information as input to JSDL
 + Q: Are the extensions specified somewhere? - A: Yes, HPC deliverables (should be public?).

- VIOLA presentation [Oliver; slides on GridForge]
 + Job and reservation data is sent and processed seperatly
 + Subset of JSDL is used
 + Q: Can the current middleware (UNICORE) be replaced by something else (Globus)? - A: Yes.
 + Q: Which negotiation is used? - A: Propriatary protocol.
 + Remark: There have to be some common parameters used for scheduling, but 
   most stuff schould go into the job description.


- Calana presentation [Mathias; slides on GridForge]
 + Not prepared for JSDL usage yet; may also be quite complicated.
 + Q: Any chance that in future a JSDL job can be executed (not even scheduled)? - 
   A: In general yes, but looking at the business objectives of Calana, 
   this does not make sense.

- Gridway presentation
 + Provision of a Globus GRAM interface at scheduler level which then acts as 
   a user submitting jobs to other schedulers/resource managers.
 + Proposal: GRAM could be used as THE interface to schedulers.

Questions to be discussed via the mailing list [no time left for lengthy discussion]:
 - Between which entities should agreements be established
 - Parameter semantics/syntax?
 - How to handler different models of constraints/preferences?
 - Parameters needed for scheduling?