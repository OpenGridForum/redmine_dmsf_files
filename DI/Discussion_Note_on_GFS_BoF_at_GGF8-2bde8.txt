
  - Slides
    - intro
    - several examples of large scale propr. file systems
    - relationship to grid services
      - each file == GSH 
        - billions GSHs
        - structure
        - management (ACL, VOs)
      - consistency issues
      - security issues
      - good search engine
        - google style vs yahoo style
    - example: reliable file system wservice

      Q: hierarchy exploiting service collections?
      A: yes
      
      Q: problem with notion of lockin and ACL
      A: is not a requirement but feature
      C: namespace on underlying (...), namespace should be vary of
         lower level locking, not on higher level... - additional
         logical log, but constency must be maintained on lower level
      C: locks: which level...
      C: locking is gentleman agreement...
         --> discussion postponed
      
      C: not necessarily hierarchical name space
         
      Q: include descriptive attributes?
      A: yes

    - proposed charter
      - different from the www-published one
    
      Q: limitations to files as objects?
      C: no
      
      Q: RG or WG?  Rather go to WG?
      A: standardization could be done in WG later
         research first (requirements)
      
      Q: looks like first do survey + use cases.  
         what after?  Input into other WGs, or do self standard, or
         what?
      A: will be seen later

      Q: intention to spawn WGs?
      A: if appropriate

      Q: relation to DAIS file access work?
      A: DAIS deals with existing file systems, and relates
         functionality to that.  
      C: [DAIS:] dais does not take over everything, not as broad,
         no file system notion.  Dais focuses on specific requests
         to specific files - no issues

      C: major overlap with replica services, since that is doing
         mapping - you put organization on top of that. Consistency
         of both name spaces
      A: use same handle

      Q: relation to indexing services?
      A: purpose of index is search, not directory
      C: index could be used for name space
      A: both are orthogonal
      A: GFS introduces structure

      Q: metadata: independent from lower level meta data, or their
         reflection?
      A: depends on demands (users, applications)

      C: postpone discussion to group session

  - charter comments
    Q: say 'unstructured data' not 'files'
    C: say 'content repository' not 'file system' (as in Java)

    C: interested in federatin more than file systems -> rather
       digital entities
    Q: also data bases?
    A: [DAIS]: completely different thing, works much more on
       internal structure and relations  
    C: vocabulary! 

    C: there is difference between federatin name spaces and
       federating 'things, file systems'
    Q: which is intended?
    A: not only NS.  +ACL  
    Q: data in files?
    A: no!
    C: still serialization and concurrency issues

    C: locking dicussion, again postponed...

    C: federation of NS!

    C: scope gets tto wide if diverge sources/types
    A: still same types - string of bits
    A: ok

    C: WHY not talk of data sets and only of files?
    A: more ambitious than needed to gfenerate something useful


  - milestones
    C: need standard first, then implementations
    A: implementations do exist already
    C: standard (recommnedation) must com from WG

    C: not fine/complete enough: be more specific
    A: next slide

    Q: lifetime to GGF11
    A: recharter


  - relationships:
    C: add OGSA


  C: [AD]: 
    - charter: groups is pushing away from charter (ok)
    - milestones: estimate interest 
    - participation: ok

  - organization
    - chair: osamu
    - secretary:

    - do it offline         TODO
    - create mailing list   TODO

    - work on documents: see slides

    - Face to 

    - Volunteers:
      - contact: Fabrizio Magugliani (SGI): maguglia@sgi.com
      


    
