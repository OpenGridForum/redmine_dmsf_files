OGSA Teleconference February 26, 2004
=====================================

* Participants

  Latha Srinivasan (HP)
  Andrew Grimshaw (UVa)
  Jem Treadwell (HP)
  David Snelling (Fujitsu)
  Andreas Savva (Fujitsu)
  Hiro Kishimoto (Fujitsu)
  Fred Maciel (Hitachi)

* Summary of Actions

  Action: UC reviewers should send comments to Jeffrin by
          Monday (3/1).

   Action: Andrew to present the naming proposal at GGF10
           - To do presentation based on EPRs and show how mapping is
             done.
           - Make clear this proposal does not address identity yet.

   Action: Andrew to talk with GFS people (and Dave Martin) about
           generalizing the GFS proposal. (Hierarchical naming scheme
           that at the lowest level does not necessarily map to
           files.)

* Early Discussion

** Use cases
  - Checkpoint next Monday. (Arranged timeslot in call.)
  
  Action: UC reviewers should send comments to Jeffrin by
          Monday (3/1).

** OGSA document pen

  - Andrew will have some PE additions ready for the OGSA document
    early next week.
  - Andreas has the pen at the moment, email him to get the latest
    document.

* WS-Naming

  - Andrew gave an overview of naming schemes in distributed systems.
    - Multi-level naming schemes are common in distributed systems.
    - Maximum levels: 3
    - One level is typically human-space
    - In OGSI, GSH is(can be) an abstract name. GSHs do not exist in
      WSRF.
    - Legion example:
      - LOID: abstract name similar to GSH
      - 'Context space' has a number of operations 
        - int insert("name", loid)
        - int remove("name")
        - LOID lookup("name")
        - LOID_list multilookup(regexp)
      - context spaces: directed graph of context object
        - Hierarchical, borrowed a lot from filesystems (e.g.,
          ".." would also work.)
        - Something like Unix procfs (could check what interfaces or
          attributes a 'service' supports and also invoke operations
          on it.)
        - e.g., command-line that takes GSH or directory path (might
          not be able to disinguish between them without extra
          information).
      - There is no global/universal context. 
        - So if I have no context how do I get one? (Legion: a setup
          script has a configuration for setting the root
          contenxt. Defined two context by default: root and current
          context. So bootstrapping is out of band.)
      - Contexts are hierarchical. But it is possible to have
        disconnected hierarchies (islands) or may have arbitrary links
        between the hierarchies. No need for absolute names.

  - Problem: WSRF collapsed GSH and GSR into RenewableReferences
    (RR). No longer have anything like an abstract name (GSH).
    - Also RRs cannot be compared
      - (OGSI GSH at least had textual equality.)
  - Also would be nice to be able to ask a service 'are you this
    thing?"
    - This is not in the OGSA (and it wasn't in OGSI either).

  - Dave gave a summary of the RR proposal:
    - Mechanism to associate identifier to resource (resource is
      something like host, file, fileserver, etc.)
    - WS that fronts resource provides the 'identifier'. The
      identifier is not guaranteed unique.
    - EPR referenceProperty contains resource identity.
    - EPR also contains 
      - address of WS.
      - Policy component that defines how the EPR can be renewed.
        i.e., Resolver information that can return new information
        about the EPR (one new EPR).
    - In brief: RR is a special case of an EPR
      - (EPRs are defined in the WS-Addressing specification)
      - (An EPR that contains an endpoint that associates a web service
        to a resource becomes a resource qualified EPR)
      - (An EPR may also contain a policy component; and the policy
        may be renewable.)

    - (Is there any guarantee that EPRs are permanent? Might renew an
      EPR number of times and end up with an EPR that is completely
      different.)
    - (EPRs might end up being quite large.)

    - The basic mechanism is there, but the naming semantics we want
      are not there.

  - Proposal is for OGSA to specify extra semantics so that
    clients/invokers can assume those semantics.

     - One possibility is "name" to EPR translation (or some
       definition of the nature of resource qualified name).
       - But the second possibility does not handle directory like
         schemes.
     - Going from abstract name to EPR is probably easy/simple; not so
       the other way.

     - ('renewable' is something added to the open policy section. It
       is an extension.)
     - By codifying usage could define abstract names as possible
       extensions (to the EPRs) without requiring more stuff.

     - Abstract name vs identity
       - identity is different from abstract name. We should define
         how we determine it.

   Action: Andrew to present the naming proposal at GGF10
     - To do presentation based on EPRs and show how mapping is done.
     - Make clear this proposal does not address identity yet. 

   Action: Andrew to talk with GFS people (and Dave Martin) about
           generalizing the GFS proposal. (Hierarchical naming scheme
           that at the lowest level does not necessarily map to
           files.)

* AOB

** Enterprise Grid BoF:
   - People interested in attending but not enough (up to date)
     information about this BoF.
   - Kickstarted by CeC; Seems to have come out of GMAC (partly)
   - Under architecture area
   - A number of proposals for chairs; not fixed yet.
   - It's a research group; more open ended, longer timescale.
